{"remainingRequest":"D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\thread-loader\\dist\\cjs.js!D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\babel-loader\\lib\\index.js!D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\webProject\\realwork\\build002\\attendfaceregv02\\src\\components\\addUserImage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\webProject\\realwork\\build002\\attendfaceregv02\\src\\components\\addUserImage.vue","mtime":1622021221568},{"path":"D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\webProject\\realwork\\build002\\attendfaceregv02\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L3dlYlByb2plY3QvcmVhbHdvcmsvYnVpbGQwMDIvYXR0ZW5kZmFjZXJlZ3YwMi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZmFjZWFwaSBmcm9tICJmYWNlLWFwaS5qcyI7CmZhY2VhcGkuZW52Lm1vbmtleVBhdGNoKHsKICBDYW52YXM6IEhUTUxDYW52YXNFbGVtZW50LAogIEltYWdlOiBIVE1MSW1hZ2VFbGVtZW50LAogIEltYWdlRGF0YTogSW1hZ2VEYXRhLAogIFZpZGVvOiBIVE1MVmlkZW9FbGVtZW50LAogIGNyZWF0ZUNhbnZhc0VsZW1lbnQ6IGZ1bmN0aW9uIGNyZWF0ZUNhbnZhc0VsZW1lbnQoKSB7CiAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7CiAgfSwKICBjcmVhdGVJbWFnZUVsZW1lbnQ6IGZ1bmN0aW9uIGNyZWF0ZUltYWdlRWxlbWVudCgpIHsKICAgIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKICB9Cn0pOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImFkZFVzZXJJbWFnZSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzbG9hZGVkOiBmYWxzZSwKICAgICAgZmlsZXM6IFtdLAogICAgICBkZXNjcmlwdG9yc2pzb246IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcHJldmlld1BpY3M6IGZ1bmN0aW9uIHByZXZpZXdQaWNzKCkgewogICAgICB0aGlzLmdldERlc2NyaXB0b3IoKTsKICAgIH0sCiAgICBnZXREZXNjcmlwdG9yOiBmdW5jdGlvbiBnZXREZXNjcmlwdG9yKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgaW5kZXgsIHRvaW1hZ2UsIGRldGVjdGlvbjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpbmRleCA9IDA7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGlmICghKGluZGV4IDwgNSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmYWNlYXBpLmJ1ZmZlclRvSW1hZ2UoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImltYWdlZmlsZXMiKS5maWxlc1tpbmRleF0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICB0b2ltYWdlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIGZhY2VhcGkuZGV0ZWN0U2luZ2xlRmFjZSh0b2ltYWdlKS53aXRoRmFjZUxhbmRtYXJrcygpLndpdGhGYWNlRGVzY3JpcHRvcigpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBkZXRlY3Rpb24gPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIF90aGlzLmRlc2NyaXB0b3JzanNvbi5wdXNoKEpTT04uc3RyaW5naWZ5KEFycmF5LmZyb20oZGV0ZWN0aW9uLmRlc2NyaXB0b3IpKSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGluZGV4Kys7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ2FsbGltZ3VwbG9hZGVkJywgX3RoaXMuZGVzY3JpcHRvcnNqc29uKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBQcm9taXNlLmFsbChbZmFjZWFwaS5uZXRzLmZhY2VMYW5kbWFyazY4TmV0LmxvYWRGcm9tVXJpKCIvbW9kZWxzIiksIGZhY2VhcGkubmV0cy5mYWNlUmVjb2duaXRpb25OZXQubG9hZEZyb21VcmkoIi9tb2RlbHMiKSwgZmFjZWFwaS5uZXRzLnNzZE1vYmlsZW5ldHYxLmxvYWRGcm9tVXJpKCIvbW9kZWxzIiksIGZhY2VhcGkubmV0cy50aW55RmFjZURldGVjdG9yLmxvYWRGcm9tVXJpKCIvbW9kZWxzIildKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMyLmlzbG9hZGVkID0gdHJ1ZTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["addUserImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAcA,OAAA,KAAA,OAAA,MAAA,aAAA;AACA,OAAA,CAAA,GAAA,CAAA,WAAA,CAAA;AACA,EAAA,MAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA,gBAFA;AAGA,EAAA,SAAA,EAAA,SAHA;AAIA,EAAA,KAAA,EAAA,gBAJA;AAKA,EAAA,mBAAA,EAAA;AAAA,WAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AAAA,GALA;AAMA,EAAA,kBAAA,EAAA;AAAA,WAAA,QAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AAAA;AANA,CAAA;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,eAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,aAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,KAFA,GAEA,CAFA;;AAAA;AAAA,sBAEA,KAAA,GAAA,CAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGA,OAAA,CAAA,aAAA,CACA,QAAA,CAAA,cAAA,CAAA,YAAA,EAAA,KAAA,CAAA,KAAA,CADA,CAHA;;AAAA;AAGA,gBAAA,OAHA;AAAA;AAAA,uBAMA,OAAA,CACA,gBADA,CACA,OADA,EAEA,iBAFA,GAGA,kBAHA,EANA;;AAAA;AAMA,gBAAA,SANA;;AAUA,gBAAA,KAAA,CAAA,eAAA,CAAA,IAAA,CACA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CADA;;AAVA;AAEA,gBAAA,KAAA,EAFA;AAAA;AAAA;;AAAA;AAcA,gBAAA,KAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,KAAA,CAAA,eAAA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAnBA,GATA;AA8BA,EAAA,OA9BA,qBA8BA;AAAA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,CACA,OAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,WAAA,CAAA,SAAA,CADA,EAEA,OAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,WAAA,CAAA,SAAA,CAFA,EAGA,OAAA,CAAA,IAAA,CAAA,cAAA,CAAA,WAAA,CAAA,SAAA,CAHA,EAIA,OAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,WAAA,CAAA,SAAA,CAJA,CAAA,EAKA,IALA,CAKA,YAAA;AAAA,MAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AAAA,KALA;AAMA;AArCA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <input v-show=\"isloaded\"\r\n      type=\"file\"\r\n      id=\"imagefiles\"\r\n      ref=\"myfiles\"\r\n      @change=\"previewPics\"\r\n      multiple\r\n      accept=\"image/*,.jpg,.jpeg,.png\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as faceapi from \"face-api.js\";\r\nfaceapi.env.monkeyPatch({\r\n  Canvas: HTMLCanvasElement,\r\n  Image: HTMLImageElement,\r\n  ImageData: ImageData,\r\n  Video: HTMLVideoElement,\r\n  createCanvasElement: () => document.createElement(\"canvas\"),\r\n  createImageElement: () => document.createElement(\"img\"),\r\n});\r\nexport default {\r\n  name: \"addUserImage\",\r\n  data() {\r\n    return {\r\n      isloaded: false,\r\n      files: [],\r\n      descriptorsjson: [],\r\n    };\r\n  },\r\n  methods: {\r\n    previewPics() {\r\n      this.getDescriptor();\r\n    },\r\n    async getDescriptor() {\r\n      // const imageupload = document.getElementById('imagefiles')\r\n      for (let index = 0; index < 5; index++) {\r\n        const toimage = await faceapi.bufferToImage(\r\n          document.getElementById(\"imagefiles\").files[index]\r\n        );\r\n        const detection = await faceapi\r\n          .detectSingleFace(toimage)\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptor();\r\n        this.descriptorsjson.push(\r\n          JSON.stringify(Array.from(detection.descriptor))\r\n        );\r\n      }\r\n      this.$emit('allimguploaded', this.descriptorsjson);\r\n    },\r\n  },\r\n  created() {\r\n    Promise.all([\r\n      faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\r\n      faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\"),\r\n      faceapi.nets.ssdMobilenetv1.loadFromUri(\"/models\"),\r\n      faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\")\r\n    ]).then(() => {this.isloaded = true});\r\n  },\r\n};\r\n</script>"],"sourceRoot":"src/components"}]}